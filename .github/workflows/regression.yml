name: Regression

on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize]

jobs:
  fmt:
    name: Format
    strategy:
      matrix:
        os: [ubuntu-latest]
        toolchain: [stable]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Run checkout
        uses: actions/checkout@v4
      - name: Install toolchain
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: ${{ matrix.toolchain }}
          components: rustfmt, clippy
      - name: Check format
        run: cargo fmt --all -- --check

  check:
    name: Check
    strategy:
      matrix:
        os: [ubuntu-latest]
        toolchain: [stable]
        features: ["ipadic", "ko-dic", "cc-cedict"]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Run checkout
        uses: actions/checkout@v4
      - name: Install toolchain
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: ${{ matrix.toolchain }}
          components: rustfmt, clippy
      - name: Run check
        run: cargo check --features "${{ matrix.features }}"

  test:
    name: Test
    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest, windows-latest]
        toolchain: [stable]
        features: ["ipadic", "ko-dic", "cc-cedict"]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Run checkout
        uses: actions/checkout@v4
      - name: Install toolchain
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: ${{ matrix.toolchain }}
          components: rustfmt, clippy
      - name: Run test
        run: cargo test --features "${{ matrix.features }}"
